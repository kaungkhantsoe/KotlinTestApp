apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'me.moallemi.advanced-build-version'

advancedVersioning {
    nameOptions {
        versionMajor 1
        versionMinor 0
        versionPatch 0
    }
    codeOptions {
        versionCodeType 'AUTO_INCREMENT_DATE'
        dependsOnTasks 'release'
    }
    outputOptions {
        renameOutput true
        nameFormat '${appName}-v${versionName}'
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.yammobots.holidaytestapp"
        minSdkVersion 21
        targetSdkVersion 29
       /* versionCode 1
        versionName "1.0"*/

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Butterknife requires Java 8.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        // Instrumentation test
        androidTest.java.srcDirs += "src/test-common/java"

        // Local unit test
        test.java.srcDirs += "src/test-common/java"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // -------- INSTRUMENTATION TESTS (use JUnit4)
    androidTestImplementation 'junit:junit:4.12'

    // AndroidX test
    def androidx_test_version = "1.1.0"
    androidTestImplementation "androidx.test:core:$androidx_test_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"

    // Architecture components testing
    def androidx_arch_test_version = "2.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:$androidx_arch_test_version"


    // -------- LOCAL UNIT TESTS (use JUnit5)
    // JUnit Jupiter
    def junit_jupiter_version = "5.3.2"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"

    // -------- MOCKITO
    def mockito_version = "3.3.3"
    testImplementation "org.mockito:mockito-core:$mockito_version"

    def mockito_inline_version = "2.13.0"
    testImplementation "org.mockito:mockito-inline:$mockito_inline_version"


    // Androidx
    def card_view_version = "1.0.0"
    implementation "androidx.cardview:cardview:$card_view_version"

    def recycler_view_version = "1.1.0"
    implementation "androidx.recyclerview:recyclerview:$recycler_view_version"

    // Dagger
    def dagger_version = "2.26"
//    def dagger_version = "2.16" // version used by google samples

    // Dagger2 core
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Dagger Android
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Glide
    def glideVersion = "4.10.0"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Butterknife
    def butterknife_version = "10.2.1"
    implementation "com.jakewharton:butterknife:$butterknife_version"
    kapt "com.jakewharton:butterknife-compiler:$butterknife_version"

    // ViewModel and LiveData
    def lifecycle_version = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // Retrofit
    def retrofitVersion = "2.6.2"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Okhttp
    def okhttp_version = "4.2.2"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    // RxJava
    def rxjava_version = '2.2.6'
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    // Rx-Retrofit Call Adapter
    def rxcalladapter_version = '2.5.0'
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rxcalladapter_version" // Retrofit call adapter

    // Reactive Streams (convert Observable to LiveData)
    def reactivestreams_version = "1.1.1"
    implementation "android.arch.lifecycle:reactivestreams:$reactivestreams_version"

    // architecture comp. navigation
    def nav_version = "2.2.0-alpha01"
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    implementation "androidx.navigation:navigation-runtime:$nav_version"

    // jsoup HTML parser library @ https://jsoup.org/
    def jsoup_version = "1.12.1"
    implementation "org.jsoup:jsoup:$jsoup_version"

    // Room
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Bottom Navigation
    def bottom_nav_view_version = "2.3.4"
    implementation "com.aurelhubert:ahbottomnavigation:$bottom_nav_view_version"

    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'
}

